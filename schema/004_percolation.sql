CREATE TABLE IF NOT EXISTS app_state(
       name text PRIMARY KEY,
       data jsonb NOT NULL
);

CREATE TABLE IF NOT EXISTS percolator(
       id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
       hash bytea NOT NULL,
       owner text,
       created timestamptz NOT NULL,
       doc_type text NOT NULL,
       query jsonb NOT NULL,
       deleted bool NOT NULL DEFAULT false,
       CONSTRAINT pcl_unique_hash UNIQUE NULLS NOT DISTINCT(hash, owner)
);

CREATE TABLE IF NOT EXISTS percolator_document_index(
       percolator bigint NOT NULL,
       index text NOT NULL,
       PRIMARY KEY (percolator, index),
       FOREIGN KEY (percolator) REFERENCES percolator(id)
               ON DELETE CASCADE
);

-- The event table is unlogged, cheaper, but not persistent:
-- https://www.crunchydata.com/blog/postgresl-unlogged-tables
CREATE UNLOGGED TABLE IF NOT EXISTS percolator_event(
       -- ID is the same as the originating event ID.
       id bigint NOT NULL,
       document uuid NOT NULL,
       percolator bigint NOT NULL,
       matched bool NOT NULL,
       created timestamptz NOT NULL,
       PRIMARY KEY(id, percolator)
);

CREATE INDEX percolator_event_created
          ON percolator_event(created);

CREATE UNLOGGED TABLE IF NOT EXISTS percolator_event_payload(
       -- ID is the same as the originating event ID.
       id bigint PRIMARY KEY,
       created timestamptz NOT NULL,
       data jsonb NOT NULL
);

CREATE INDEX percolator_event_payload_created
          ON percolator_event_payload(created);

CREATE TABLE IF NOT EXISTS subscription(
       id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
       percolator bigint NOT NULL,
       client text NOT NULL,
       hash bytea NOT NULL,
       touched timestamptz NOT NULL,
       spec jsonb NOT NULL,
       CONSTRAINT sub_unique_hash UNIQUE NULLS NOT DISTINCT(percolator, client, hash),
       FOREIGN KEY(percolator) REFERENCES percolator(id)
               ON DELETE CASCADE
);

ALTER TABLE index_set
      ADD COLUMN caught_up bool NOT NULL DEFAULT false;

---- create above / drop below ----

DROP TABLE IF EXISTS subscription;
DROP TABLE IF EXISTS percolator_event_payload;
DROP TABLE IF EXISTS percolator_event;
DROP TABLE IF EXISTS percolator_document_index;
DROP TABLE IF EXISTS percolator;
DROP TABLE IF EXISTS app_state;

ALTER TABLE index_set
      DROP COLUMN caught_up;
